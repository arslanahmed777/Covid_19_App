{"version":3,"sources":["components/NavBar.js","components/Globle.js","components/AllCountries.js","components/Graphs.js","components/InfoPanel.js","components/FootNav.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","NavBar","currentScreen","classes","className","AppBar","Toolbar","Typography","variant","InputBase","placeholder","input","inputProps","maxWidth","margin","marginTop","paper","textAlign","text","secondary","Globle","useState","globalData","setGlobalData","useEffect","a","fetch","response","json","data","results","source","formdata","Object","keys","map","val","idx","Grid","key","item","xs","sm","Paper","elevation","Box","borderLeft","borderTop","borderRight","border","borderColor","p","md","lg","gutterBottom","replace","toUpperCase","start","end","duration","separator","container","maxHeight","AllCountries","rows","values","countryitems","ourid","total_cases","total_recovered","total_unresolved","total_deaths","total_new_cases_today","total_new_deaths_today","total_active_cases","total_serious_cases","push","justify","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","component","scope","Graphs","countriesArray","total_cases_Array","total_recovered_Array","total_new_cases_today_Array","total_new_deaths_today_Array","total_active_cases_Array","total_deaths_Array","graphData","labels","datasets","label","fill","InfoPanel","FootNav","screenConfig","BottomNavigation","value","onChange","event","newValue","showLabels","BottomNavigationAction","icon","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e3488da.chunk.js","sourcesContent":["import React from 'react'\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n          marginLeft: theme.spacing(1),\n          width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n            width: '20ch',\n            },\n        },\n    },\n  }));\nconst NavBar = ({currentScreen}) => {\n    const classes = useStyles();\n    \n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        COVID_19 TRACKER\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                        placeholder=\"Search…\"\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput,\n                        }}\n                        inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}\n\nexport default NavBar\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Grid,Box,Typography,Paper} from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 1000,\n    margin: \"0 auto\",\n    marginTop:\"20px\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Globle = () => {\n  const classes = useStyles();\n  const [globalData, setGlobalData] = useState({});\n  useEffect(() => {\n    async function formdata() {\n      const response = await fetch(\n        \"https://api.thevirustracker.com/free-api?global=stats\"\n      );\n      let data = await response.json();\n      delete data.results[0].source;\n      setGlobalData(data.results[0]); \n    }\n    formdata();\n  }, []);\n\n  const data = Object.keys(globalData).map((val,idx)=>{\n    return(\n        <Grid key={idx} item xs={12} sm={4}>\n            <Paper elevation={3} >\n                <Box textAlign=\"center\"  borderLeft={0}borderTop={0}borderRight={0} border={4}borderColor=\"red\" p={{ xs:2,sm:2,md:2,lg:2 }}>\n                    <Box color=\"primary.main\">\n                        <Typography  variant=\"h6\" gutterBottom>{val.replace(/_/gi, \" \").toUpperCase()}</Typography>\n                    </Box>\n                    <Box>\n                        <Typography  variant=\"h5\" >\n                            <CountUp\n                                start={0}\n                                end={globalData[val]}\n                                duration={2.5}\n                                separator=\",\"\n                                    />\n                        </Typography>\n                    </Box>\n                </Box>\n            </Paper>\n        </Grid>\n    )\n  })\n  \n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n      {data}\n      </Grid>\n    </div>\n  );\n};\n\nexport default Globle;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Grid,Paper} from \"@material-ui/core\";\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        maxHeight: \"70vh\",\n      },\n}));\n\n\n  \n\nconst AllCountries = () => {\n  const classes = useStyles();\n  const [globalData, setGlobalData] = useState([{}]);\n  \n  function createData(ourid, title, total_cases, total_recovered, total_unresolved, total_deaths, total_new_cases_today, total_new_deaths_today, total_active_cases, total_serious_cases) {\n    return { ourid, title, total_cases, total_recovered, total_unresolved, total_deaths, total_new_cases_today, total_new_deaths_today, total_active_cases, total_serious_cases };\n  }\n \n\nconst rows = [];\n\n  \n  \n  useEffect(() => {\n    async function formdata() {\n      const response = await fetch(\n        \"https://api.thevirustracker.com/free-api?countryTotals=ALL\"\n      );\n      let data = await response.json();\n      setGlobalData(Object.values(Object.values(data.countryitems)[0])); \n      \n    }\n    formdata();\n  }, []);\n  globalData.map((val,idx)=>{\n    rows.push(createData(globalData[idx].ourid,globalData[idx].title , globalData[idx].total_cases, globalData[idx].total_recovered, globalData[idx].total_unresolved, globalData[idx].total_deaths, globalData[idx].total_new_cases_today, globalData[idx].total_new_deaths_today, globalData[idx].total_active_cases, globalData[idx].total_serious_cases));\n    \n  })\n\n   \n  return (\n      <Grid container justify=\"center\" spacing={3}>\n            <Grid item lg={10} xs={12}  sm={4}>\n                <Paper>\n                    <TableContainer className={classes.container} >\n                        <Table   stickyHeader aria-label=\"sticky table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>title</TableCell>\n                                    <TableCell align=\"right\">total_cases</TableCell>\n                                    <TableCell align=\"right\">total_recovered</TableCell>\n                                    <TableCell align=\"right\">total_unresolved</TableCell>\n                                    <TableCell align=\"right\">total_deaths</TableCell>\n                                    <TableCell align=\"right\">total_new_cases_today</TableCell>\n                                    <TableCell align=\"right\">total_new_deaths_today</TableCell>\n                                    <TableCell align=\"right\">total_active_cases</TableCell>\n                                    <TableCell align=\"right\">total_serious_cases</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {rows.map((row) => (\n                                    <TableRow key={row.ourid}>\n                                        <TableCell component=\"th\" scope=\"row\">{row.title}</TableCell>\n                                        <TableCell align=\"right\">{row.total_cases}</TableCell>\n                                        <TableCell align=\"right\">{row.total_recovered}</TableCell>\n                                        <TableCell align=\"right\">{row.total_unresolved}</TableCell>\n                                        <TableCell align=\"right\">{row.total_deaths}</TableCell>\n                                        <TableCell align=\"right\">{row.total_new_cases_today}</TableCell>\n                                        <TableCell align=\"right\">{row.total_new_deaths_today}</TableCell>\n                                        <TableCell align=\"right\">{row.total_active_cases}</TableCell>\n                                        <TableCell align=\"right\">{row.total_serious_cases}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Paper>\n          </Grid>\n      </Grid>\n    \n  );\n};\n\nexport default AllCountries;\n","import React,{ useEffect, useState } from 'react'\nimport {Grid,Paper} from \"@material-ui/core\";\nimport {Line} from 'react-chartjs-2';\n\n\n\nconst Graphs = () => {\n    \n    const [globalData, setGlobalData] = useState([{}]);\n    useEffect(() => {\n        async function formdata() {\n          const response = await fetch(\n            \"https://api.thevirustracker.com/free-api?countryTotals=ALL\"\n          );\n          let data = await response.json();\n          setGlobalData(Object.values(data.countryitems[0])); \n          \n        }\n        formdata();\n      }, []);\n      const countriesArray = [];\n      const total_cases_Array = [];\n      const total_recovered_Array = [];\n      const total_new_cases_today_Array = [];\n      const total_new_deaths_today_Array = [];\n      const total_active_cases_Array = [];\n      const total_deaths_Array = [];\n      globalData.map((val,idx)=>{\n        //console.log(val)\n        countriesArray.push(globalData[idx].title);\n        total_cases_Array.push(globalData[idx].total_cases);\n        total_recovered_Array.push(globalData[idx].total_recovered);\n        total_new_cases_today_Array.push(globalData[idx].total_new_cases_today);\n        total_new_deaths_today_Array.push(globalData[idx].total_new_deaths_today);\n        total_active_cases_Array.push(globalData[idx].total_active_cases);\n        total_deaths_Array.push(globalData[idx].total_deaths);\n      })\n     \n    const graphData = {\n        labels: countriesArray,\n        datasets: [\n          {\n            label: 'Total Cases',\n            fill: true,\n            backgroundColor: 'rgba(91,70,195,0.4)',\n            borderColor: 'rgba(20,15,46,1)',\n            data:total_cases_Array\n          },\n          {\n            label: 'Total Recovered',\n            fill: true,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            data:total_recovered_Array\n          },\n          {\n            label: 'Total Deaths',\n            fill: true,\n            backgroundColor: 'rgba(246,103,101,0.4)',\n            borderColor: 'rgba(174,13,10,1)',\n            data:total_deaths_Array\n          },\n          {\n            label: 'Today Cases',\n            fill: true,\n            backgroundColor: 'rgba(247,178,100,0.4)',\n            borderColor: 'rgba(243,140,22,1)',\n            data:total_new_cases_today_Array\n          },\n          {\n            label: 'Today Deaths',\n            fill: true,\n            backgroundColor: 'rgba(228,139,218,0.4)',\n            borderColor: 'rgba(132,31,120,1)',\n            data:total_new_deaths_today_Array\n          },\n          {\n            label: 'Total Active',\n            fill: true,\n            backgroundColor: 'rgba(63,153,243,0.4)',\n            borderColor: 'rgba(6,51,96,1)',\n            data:total_active_cases_Array\n          },\n          \n        ]\n      };\n      \n    return (\n        <div >\n            <Grid container justify=\"center\" spacing={3}>\n                <Grid item xs={12} sm={10}>\n                    <Paper >\n                        <Line data={graphData} />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n        \n    )\n}\n\nexport default Graphs\n","import React from \"react\";\nimport Globle from \"./Globle\";\nimport AllCountries from \"./AllCountries\";\nimport Graphs from \"./Graphs.js\";\n\n\nconst InfoPanel = ({currentScreen}) => {\n    if(currentScreen === 0)\n    {\n       return <Globle/>\n    }\n    else if(currentScreen === 1)\n    {\n        return <AllCountries/>\n    }\n    else if(currentScreen === 2)\n    {\n        return <Graphs/>\n    }\n\n  \n};\n\nexport default InfoPanel;\n","import React from 'react';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport Language from '@material-ui/icons/Language';\nimport PublicIcon from '@material-ui/icons/Public';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n\n\n\n\nexport default function FootNav({screenConfig}) {\n  return (\n    <div className='bottom-bar'>\n        <div className='bottom-button-container'>\n        <BottomNavigation\n        value={screenConfig[0]}\n        onChange={(event, newValue) => {\n            screenConfig[1](newValue);\n        \n        }}\n        showLabels\n        \n        >\n            <BottomNavigationAction label=\"Globle\" icon={<Language />} />\n            <BottomNavigationAction label=\"Countries\" icon={<PublicIcon />} />\n            <BottomNavigationAction label=\"Graphs\" icon={<BarChartIcon />} />\n        </BottomNavigation>\n        </div>\n    </div>\n    \n  );\n}\n","import React,{useState} from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar.js';\nimport InfoPanel from './components/InfoPanel.js'\nimport FootNav from './components/FootNav.js'\n\n// import Test from './components/Test.js'\nfunction App() {\n  const screenConfig = useState(0);\n  return (\n    <>\n      <NavBar/>\n      \n      <InfoPanel currentScreen={screenConfig[0]}/>\n      <FootNav screenConfig={screenConfig}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}